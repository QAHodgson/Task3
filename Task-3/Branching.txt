#Using the branch command in git'$'\n\n''First we will cover the purpose of branching in git.'$'\n''The main reason why we use branching in Git is to create an independent, yet similar copy of the current repository on the project we are working on.'$'\n''Branching effectivley allows us to work on multiple things without obstructing the active/main branch.'$'\n\n''Now we will cover how to **create** a branch using the Git command line.'$'\n''To do this we will use the command: git branch [name you want for branch]'$'\n''Doing this will create a branch, however this will not move you into the branch straight away.'$'\n''To start working in the branch we have no created you can use the command: git checkout [name of branch]'$'\n\n''**However**, there is a more efficent method of creating a branch and then moving into it.'$'\n''This is by using the command we did at the start, but adding -b'$'\n''example: git branch -b [name of banch]'$'\n''This *should* create the desired branch and take you straight into the branch we just made.'$'\n\n''######Now with tall this branching going on you may want to look at all the branches you have created.'$'\n''Do not worry, we have an option for that aswell'$'\n''If you use the following command: git branch -a'$'\n''You will be shown all the branche you are tracking to be displayed (including remote ones)'$'\n''If you only want remote branches you can do -r instead.'$'\n\n''So far we have created a branch, moved into a branch, but what if we want to delete a branch?'$'\n''Well would you look at that we have a command for that too'$'\n''**git branch -d [name of branch]**'$'\n\n''There is also an alternative we can use, however this should be done with a bit more caution.'$'\n''If we use -D instead, this is the equavilent of forecfully deleting the branch.
